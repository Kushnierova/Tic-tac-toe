import React from "react";
import ReactDOM from "react-dom/client";
import "./index.css";
import App from "./App";
import reportWebVitals from "./reportWebVitals";

// const root = ReactDOM.createRoot(document.getElementById('root'));
// root.render(
//   <React.StrictMode>
//     <App />
//   </React.StrictMode>
// );

// // If you want to start measuring performance in your app, pass a function
// // to log results (for example: reportWebVitals(console.log))
// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals

// –Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –ø–æ—á–∞—Ç–∏ –≤–∏–º—ñ—Ä—é–≤–∞—Ç–∏ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —É —Å–≤–æ—î–º—É –¥–æ–¥–∞—Ç–∫—É, –ø–µ—Ä–µ–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é
// –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: reportWebVitals(console.log))
// –∞–±–æ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–∞ –∫—ñ–Ω—Ü–µ–≤—É —Ç–æ—á–∫—É –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏. –ß–∏—Ç–∞–π—Ç–µ —Ç–∞–∫–æ–∂: https://bit.ly/CRA-vitals

// reportWebVitals();
// class Square extends React.Component {
//   constructor(props) {
//     super(props);
//     this.state = {
//       value: null,
//     };
//   }

//   //‚ùó–ü—Ä–∏–º—ñ—Ç–∫–∞
//   //‚ùó–£ –∫–ª–∞—Å–∞—Ö JavaScript –ø—Ä–∏ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –ø—ñ–¥–∫–ª–∞—Å—É –≤–∏ –∑–∞–≤–∂–¥–∏ –ø–æ–≤–∏–Ω–Ω—ñ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ super.
//   //‚ùó –ö–ª–∞—Å–æ–≤—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ React, —â–æ –º–∞—é—Ç—å constructor, –ø–æ–≤–∏–Ω–Ω—ñ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ –≤–∏–∫–ª–∏–∫—É super(props).

//   render() {
//     return (
//       <button className="square" onClick={() => this.props.onClick()}>
//         {this.props.value}
//       </button>
//     );
//   }
// }

// ‚ùóüÜéSquare (–ö–ª—ñ—Ç–∏–Ω–∫–∞)
// ‚ùóüÜéBoard (–ü–æ–ª–µ)
// ‚ùóüÜéGame (–ì—Ä–∞)

// ‚ùó–ü—Ä–∏–º—ñ—Ç–∫–∞
// ‚ùó–ö–æ–ª–∏ –º–∏ –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏–ª–∏ Square —É —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –º–∏ —Ç–∞–∫–æ–∂
// ‚ùó–∑–º—ñ–Ω–∏–ª–∏ onClick={() => this.props.onClick()} –Ω–∞ –∫–æ—Ä–æ—Ç—à–∏–π onClick={props.onClick}
// ‚ùó(–∑–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É –Ω–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –∫—Ä—É–≥–ª–∏—Ö –¥—É–∂–æ–∫ –∑ –æ–±–æ—Ö —Å—Ç–æ—Ä—ñ–Ω).

function Square(props) {
  return (
    <button className="square" onClick={props.onClick}>
      {props.value}
    </button>
  );
}
class Board extends React.Component {
  // ‚ùó–ú–µ—Ç–æ–¥ render –ø–æ–≤–µ—Ä—Ç–∞—î –æ–ø–∏—Å —Ç–æ–≥–æ, —â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –±–∞—á–∏—Ç–∏ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ.
  // ‚ùóReact –ø—Ä–∏–π–º–∞—î —Ü–µ–π –æ–ø–∏—Å —ñ –≤—ñ–¥—Ç–≤–æ—Ä—é—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
  // ‚ùó–ó–æ–∫—Ä–µ–º–∞, render –ø–æ–≤–µ—Ä—Ç–∞—î React-–µ–ª–µ–º–µ–Ω—Ç ‚Äî –ø–æ–ª–µ–≥—à–µ–Ω—É –≤–µ—Ä—Å—ñ—é —Ç–æ–≥–æ, —â–æ —Ç—Ä–µ–±–∞ –≤—ñ–¥—Ä–µ–Ω–¥–µ—Ä–∏—Ç–∏.
  // ‚ùóüÜé–†√©–Ω–¥–µ—Ä–∏–Ω–≥, –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∞ –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è (–∞–Ω–≥–ª. rendering ‚Äî –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è, –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—è, –≤—ñ–¥–º–∞–ª—å–æ–≤—É–≤–∞–Ω–Ω—è, –ø–æ–¥–∞–Ω–Ω—è)
  constructor(props) {
    super(props);
    this.state = {
      squares: Array(9).fill(null),
      xIsNext: true,
    };
  }

  handleClick(i) {
    const squares = this.state.squares.slice();
    if (calculateWinner(squares) || squares[i]) {
      return;
    }
    squares[i] = this.state.xIsNext ? "X" : "O";
    this.setState({
      squares: squares,
      xIsNext: !this.state.xIsNext,
    });
  }

  renderSquare(i) {
    return (
      <Square
        value={this.state.squares[i]}
        onClick={() => this.handleClick(i)}
      />
    );
  }

  render() {
    const winner = calculateWinner(this.state.squares);
    let status;
    if (winner) {
      status = "Winner: " + winner;
    } else {
      status = "Next player: " + (this.state.xIsNext ? "X" : "O");
    }
    return (
      <div>
        <div className="status">{status}</div>
        <div className="board-row">
          {this.renderSquare(0)}
          {this.renderSquare(1)}
          {this.renderSquare(2)}
        </div>
        <div className="board-row">
          {this.renderSquare(3)}
          {this.renderSquare(4)}
          {this.renderSquare(5)}
        </div>
        <div className="board-row">
          {this.renderSquare(6)}
          {this.renderSquare(7)}
          {this.renderSquare(8)}
        </div>
      </div>
    );
  }
}

class Game extends React.Component {
  render() {
    return (
      <div className="game">
        <div className="game-board">
          <Board />
        </div>
        <div className="game-info">
          <div>{/* status */}</div>
          <ol>{/* TODO */}</ol>
        </div>
      </div>
    );
  }
}

// ========================================

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(<Game />);

function calculateWinner(squares) {
  const lines = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6],
  ];
  for (let i = 0; i < lines.length; i++) {
    const [a, b, c] = lines[i];
    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {
      return squares[a];
    }
  }
  return null;
}
